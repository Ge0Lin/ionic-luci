--- a/configure
+++ b/configure
@@ -11,18 +11,15 @@ LUA_BINDIR="/usr/bin"
 LUA_INCDIR="/usr/include"
 LUA_LIBDIR="/usr/lib"
 IDN_LIB=idn
-ICU_FLAGS="-licui18n -licudata -licuuc"
 OPENSSL_LIB=crypto
 CC=gcc
-CXX=g++
 LD=gcc
 RUNWITH=lua
 EXCERTS=yes
 
 CFLAGS="-fPIC -Wall"
-LDFLAGS="-shared"
+LFLAGS="-shared"
 
-IDN_LIBRARY=idn
 # Help
 
 show_help() {
@@ -31,7 +28,7 @@ Configure Prosody prior to building.
 
 --help                      This help.
 --ostype=OS                 Use one of the OS presets.
-                            May be one of: debian, macosx, linux, freebsd
+                            May be one of: debian, macosx
 --prefix=DIR                Prefix where Prosody should be installed.
                             Default is $PREFIX
 --sysconfdir=DIR            Location where the config file should be installed.
@@ -50,15 +47,12 @@ Configure Prosody prior to building.
                             Default is \$LUA_DIR/lib
 --with-idn=LIB              The name of the IDN library to link with.
                             Default is $IDN_LIB
---idn-library=(idn|icu)     Select library to use for IDNA functionality.
-                            idn: use GNU libidn (default)
-                            icu: use ICU from IBM
 --with-ssl=LIB              The name of the SSL to link with.
                             Default is $OPENSSL_LIB
 --cflags=FLAGS              Flags to pass to the compiler
                             Default is $CFLAGS
---ldflags=FLAGS             Flags to pass to the linker
-                            Default is $LDFLAGS
+--lflags=FLAGS              Flags to pass to the linker
+                            Default is $LFLAGS
 --c-compiler=CC             The C compiler to use when building modules.
                             Default is $CC
 --linker=CC                 The linker to use when building modules.
@@ -72,7 +66,7 @@ EOF
 
 while [ "$1" ]
 do
-   value="`echo $1 | sed 's/[^=]*=\(.*\)/\1/'`"
+   value="`echo $1 | sed 's/.*=\(.*\)/\1/'`"
    if echo "$value" | grep -q "~"
    then
       echo
@@ -286,16 +280,6 @@ then
    LUA_BINDIR="$LUA_DIR/bin"
 fi
 
-if [ "$IDN_LIBRARY" = "icu" ]
-then
-	IDNA_LIBS="$ICU_FLAGS"
-	CFLAGS="$CFLAGS -DUSE_STRINGPREP_ICU"
-fi
-if [ "$IDN_LIBRARY" = "idn" ] 
-then
-	IDNA_LIBS="-l$IDN_LIB"
-fi
-
 echo -n "Checking Lua includes... "
 lua_h="$LUA_INCDIR/lua.h"
 if [ -e "$lua_h" ]
@@ -346,12 +330,10 @@ LUA_LIBDIR=$LUA_LIBDIR
 LUA_BINDIR=$LUA_BINDIR
 REQUIRE_CONFIG=$REQUIRE_CONFIG
 IDN_LIB=$IDN_LIB
-IDNA_LIBS=$IDNA_LIBS
 OPENSSL_LIB=$OPENSSL_LIB
 CFLAGS=$CFLAGS
-LDFLAGS=$LDFLAGS
+LFLAGS=$LFLAGS
 CC=$CC
-CXX=$CXX
 LD=$LD
 RUNWITH=$RUNWITH
 EXCERTS=$EXCERTS
--- a/util-src/Makefile
+++ b/util-src/Makefile
@@ -7,12 +7,10 @@ LUA_LIB?=lua$(LUA_SUFFIX)
 IDN_LIB?=idn
 OPENSSL_LIB?=crypto
 CC?=gcc
-CXX?=g++
 LD?=gcc
 CFLAGS+=-ggdb
 
 .PHONY: all install clean
-.SUFFIXES: .c .o .so
 
 all: encodings.so hashes.so net.so pposix.so signal.so
 
@@ -24,18 +22,37 @@ clean:
 	rm -f *.so
 	rm -f ../util/*.so
 
+encodings.o: encodings.c
+       $(CC) $(CFLAGS) -I$(LUA_INCDIR) -c -o encodings.o encodings.c
+
 encodings.so: encodings.o
-	MACOSX_DEPLOYMENT_TARGET="10.3"; export MACOSX_DEPLOYMENT_TARGET;
-	$(CC) -o $@ $< $(LDFLAGS) $(IDNA_LIBS)
+       MACOSX_DEPLOYMENT_TARGET="10.3"; export MACOSX_DEPLOYMENT_TARGET;
+       $(LD) $(LFLAGS) -o encodings.so encodings.o -L$(LUA_LIBDIR) -llua$(LUA_SUFFIX) -lidn
+       
 
-hashes.so: hashes.o
-	MACOSX_DEPLOYMENT_TARGET="10.3"; export MACOSX_DEPLOYMENT_TARGET;
-	$(CC) -o $@ $< $(LDFLAGS) -l$(OPENSSL_LIB)
+hashes.o: hashes.c
+       $(CC) $(CFLAGS) -I$(LUA_INCDIR) -c -o hashes.o hashes.c
 
-.c.o:
-	$(CC) $(CFLAGS) -I$(LUA_INCDIR) -c -o $@ $<
+hashes.so: hashes.o
+       MACOSX_DEPLOYMENT_TARGET="10.3";
+       export MACOSX_DEPLOYMENT_TARGET;
+       $(LD) $(LFLAGS) -o hashes.so hashes.o -L$(LUA_LIBDIR) -llua$(LUA_SUFFIX) -lcrypto
+
+pposix.o: pposix.c
+       $(CC) $(CFLAGS) -I$(LUA_INCDIR) -c -o pposix.o pposix.c
+
+pposix.so: pposix.o
+       MACOSX_DEPLOYMENT_TARGET="10.3";
+       export MACOSX_DEPLOYMENT_TARGET;
+       $(LD) $(LFLAGS) -o pposix.so pposix.o -L$(LUA_LIBDIR) -llua$(LUA_SUFFIX)
+       
+signal.o: signal.c
+       $(CC) $(CFLAGS) -I$(LUA_INCDIR) -c -o signal.o signal.c
+
+signal.so: signal.o
+       MACOSX_DEPLOYMENT_TARGET="10.3";
+       export MACOSX_DEPLOYMENT_TARGET;
+       $(LD) $(LFLAGS) -o signal.so signal.o -L$(LUA_LIBDIR) -llua$(LUA_SUFFIX)
+       
 
-.o.so:
-	MACOSX_DEPLOYMENT_TARGET="10.3"; export MACOSX_DEPLOYMENT_TARGET;
-	$(LD) -o $@ $< $(LDFLAGS)
 
--- a/net/dns.lua
+++ b/net/dns.lua
@@ -223,7 +223,7 @@ end
 
 
 function dns.random(...)    -- - - - - - - - - - - - - - - - - - -  dns.random
-	math.randomseed(math.floor(10000*socket.gettime()) % 0x100000000);
+	math.randomseed(math.floor(10000*socket.gettime()) % 0x80000000);
 	dns.random = math.random;
 	return dns.random(...);
 end
